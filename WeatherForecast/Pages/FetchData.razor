@page "/fetchdata"
@inject HttpClient Http
@using WeatherForecast.Models

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>@forecasts.timezone</p>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Rain</th>

                <th>windspeed_10m</th>

                
            </tr>
        </thead>
        <tbody>

            @for (var i = 0; i < forecasts.hourly.time.Count(); i++)
            {
                <tr>
                    <td>@forecasts.hourly.time[i]</td>

                    <td>@forecasts.hourly.rain[i]</td>

                    <td>@forecasts.hourly.windspeed_10m[i]</td>


                    

                </tr>
            }

            @*@foreach (var tidspunkt in forecasts.hourly.time)
            {
                <tr>
                    <td>@tidspunkt</td>
                    <td>fdgdfg</td>

                </tr>
            }*@
        </tbody>
    </table>
}

@code {
    private WeatherForecast? forecasts;

    protected override async Task OnInitializedAsync()
    {



        forecasts = await Http.GetFromJsonAsync<WeatherForecast>("?latitude=59.9138&longitude=10.7387&hourly=temperature_2m,relativehumidity_2m,rain,windspeed_10m&current_weather=true");

    }






}
